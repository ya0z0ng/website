---
interface Props {
    id: string;
    closeOutside?: boolean;
}

const { id, closeOutside } = Astro.props;
const shouldCloseOutside = closeOutside === false ? "" : id;
---

<div class="component-dialog">
    <input type="checkbox" id={id} hidden />
    <label for={shouldCloseOutside}></label>
    <main>
        <label for={id}>&times;</label>
        <slot />
    </main>
</div>

<style lang="less">
    .component-dialog {
        & > input[type="checkbox"] {
            & + label {
                position: fixed;
                inset: 0;
                background: rgba(0, 0, 0, 0.4);
                opacity: 0;
                pointer-events: none;
                transition: opacity 0.2s;
                z-index: 999;
            }
            &:checked {
                & + label {
                    opacity: 1;
                    pointer-events: auto;
                }
                & ~ main {
                    opacity: 1;
                    pointer-events: auto;
                    transform: translateY(0);
                }
            }
            & ~ main {
                position: fixed;
                left: 50%;
                top: 50%;
                transform: translate(-50%, -48%) scale(1.02);
                background: #fff;
                border-radius: 12px;
                box-shadow: 0 8px 32px rgba(0, 0, 0, 0.18);
                padding: 32px 24px;
                min-width: 300px;
                max-width: 90vw;
                opacity: 0;
                pointer-events: none;
                transition:
                    opacity 0.2s,
                    transform 0.2s;
                z-index: 1000;
                & > label {
                    position: absolute;
                    right: 18px;
                    top: 12px;
                    font-size: 2rem;
                    color: #888;
                    cursor: pointer;
                    user-select: none;
                }
            }
        }
    }
    /* Modal Overlay */
    #modal-toggle:checked + .modal-overlay {
        opacity: 1;
        pointer-events: auto;
    }
    .modal-overlay {
        position: fixed;
        inset: 0;
        background: rgba(0, 0, 0, 0.4);
        opacity: 0;
        pointer-events: none;
        transition: opacity 0.2s;
        z-index: 1000;
    }

    /* Modal 本體 */
    #modal-toggle:checked ~ .modal {
        opacity: 1;
        pointer-events: auto;
        transform: translateY(0);
    }
    .modal {
        position: fixed;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -48%) scale(1.02);
        background: #fff;
        border-radius: 12px;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.18);
        padding: 32px 24px;
        min-width: 300px;
        max-width: 90vw;
        opacity: 0;
        pointer-events: none;
        transition:
            opacity 0.2s,
            transform 0.2s;
        z-index: 1001;
    }

    .modal-close {
        position: absolute;
        right: 18px;
        top: 12px;
        font-size: 2rem;
        color: #888;
        cursor: pointer;
        user-select: none;
    }
</style>
